Database used in this analysis: https://www.dropbox.com/s/cvsasmtr8syq2c2/BIT_DB?dl=0

# Analysis:

# A small overview to see the data we have to query.
SELECT * FROM BIT_DB.customers LIMIT 20;

# Selecting the data with only correct information, without any missing coloumns.

SELECT * FROM BIT_DB.customers 
WHERE length(order_id)=6
AND order_id<>'Order ID';

# Number of orders placed in January.

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

# Specifying the number of orders made in January for one certain product.

SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

# Looking at all customer account numbers for all orders placed in the month of February.

SELECT distinct acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

# The cheapest priced item in the month of January with the price itseld shown.

SELECT product, min(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;

# Total revenue for each product sold in January.

SELECT sum(quantity)*price as revenue
,product
FROM BIT_DB.JanSales
GROUP BY product;

# List of products sold in the month of February at a specific adress, with the total amount and revenue of them shown.

SELECT
sum(Quantity),
product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

# Listing customers whom ordered more than 2 products ata time, with the avarage amount spent by those customers.

SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';
